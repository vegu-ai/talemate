{% if context %}
<|SECTION:HISTORY|>
{% for entry in context %}
{{ entry["text"] }}

{% endfor %}
{% endif %}
{% set can_dig = layer > -1 %}
{% for entry in entries %}
{% if entry.get("layer") > -1 or layer == -1 %}<|SECTION:CHAPTER {{ loop.index }}|>
{{ time_diff(entry.get("ts_end", entry.get("ts"))) }}
{{ entry["text"] }}
<|CLOSE_SECTION|>{% endif %}
{% endfor %}
{% if is_initial -%}
<|SECTION:CURRENT SCENE|>
{% for entry in entries %}
{% if entry.get("layer") == -1 %}{{ entry["text"] }}

{% endif %}
{% endfor %}
{{ scene.snapshot(lines=15, ignore=['director', 'reinforcement']) }}
<|CLOSE_SECTION|>
{% endif %}

{% if is_initial or dig_question %}
<|SECTION:QUERY|>
{{ dig_question or query }}
{% endif %} 
<|SECTION:TASK|>
The author of the scene has given YOU - the analyst - a query and is asking you to provide additional context to the actors in the scene. 

{% if is_initial %}- Understand the query, what do we want to find out?
- For a query to be valid any of the following must be true:
  - A character is trying to retrieve information in the form of a question.
  - A location, event, off-scene person or object is refered to that you could gather more information about.
- The query is invalid if any of these are true:
  - The answer to the query is already contained within the current scene.
- If the query is invalid you must call abort() immediately.
{% endif -%}
- Read the provided chapters and select one that holds the answer or relevant context.{% if can_dig %} You can also decide to dig chapters for more information.{% else %}
- If no answer can be provided, but you can provide additional relevant context, that is also acceptable.{% endif %}
- Select a function to call to process the request.

### Available Functions
{% if can_dig %}- `dig(chapter_number, question)` to dig into a specific chapter for more information - number must be available and listed as a chapter above. You must call dig multiple times if there are multiple promising chapters to investigate.
  - Valid chapters to dig: {% for entry in entries %}{% if entry.get("layer") > -1 %}{{ loop.index }}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}
  - The question you pass to the dig query must contain enough context to accurately target the event you want to query. Don't be vague, be specific by providing any relevant context you have learned so far. If you are targeting a specific event mention it using a detailed description that leaves no doubt.
  - Do not mention chapters in your question.{% else %}- `answer(answer)` to provide an answer or context or both.
  - Use the history for context, but source the answer from the Chapter(s).
  - You MUST NOT let the query impact the answer. The chapters are the source of truth. The query may imply or assume incorrect things.
  - The answer MUST be factional information and MUST NOT mention chapter numbers.
  - Answer the query and provide contextual and circumstantial details.
  - Limit the answer to two paragraphs.
  - The answer text must be explanatory summarization, NOT narration.
  - For historic context include a note about how long ago the situation occured and use past tense. You must always mention how long ago your sourced information was the truth.
  {% if character %}- Also include a note as to how aware {{ character.name }} is of the information you provided in your answer.{% endif %}
{% endif %}
- `abort()` to stop the process if there are no avenues left to explore and there is no information to satisfy the query.

### Rules
- You MUST NOT mix functions
{%- if can_dig %}
- Digging is expensive. Only dig chapters if they are highly likely to be related to the query.{% endif %}
{%- if not can_dig %}
- When using the `answer()` function always write from the perspective of the investigator.{% endif %}
- Use untyped code blocks, so ``` instead of ```python.
- You must never invent information. Dig instead.
- End with `DONE` after calling a function.
- You must not invent or guess, you can however decide to provide extra context if a factual answer is not possible.
{% if is_initial %}- If the answer contained in current scene the query is invalid and you must abort.{% endif %}

### Response Format
Follow this format exactly:

{% if is_initial %}QUERY: <Analysis of the query, what could be the reason this query was given to you? Be very strict with your evaluation. Many queries are given in error.>

ANALYSIS:
- character trying retrieve information: <yes or no>.
- answer contained in current scene: <yes or no>.
- location, event, off-scene person or object mentioned: <yes or no>.
- query valid based on the above: <yes or no>.

<Quick Analysis of the provided information>

{% else %}
ANALYSIS: <Quick Analysis of the provided information>

{% endif -%}

FUNCTION SELECTED: <Quickly explain which function you have selected and why.>

CALL:
```
<function_name>(<arguments>)
```
DONE
<|CLOSE_SECTION|>
<|SECTION:EXAMPLES|>

{% if can_dig %}Digging:

CALL:
```
dig(3, "What is the significance of the red door? The red door here refers to the red door in Jason's basement.")
```
DONE

Digging multiple times:

Start with the most promising chapter first, then move to the next most promising chapter.

CALL:
```
dig(3, "What is the significance of the red door? The red door here refers to the red door in Jason's basement.")
dig(5, "What is the significance of the red door? The red door here refers to the red door in Jason's basement.")
```
DONE{% endif %}

{% if not can_dig %}Answering:

CALL:
```
answer("Two weeks ago James discovered that the red door led to the secret chamber where the treasure was hidden. James learned about it from his grandfather.{% if character %} James knows this information, as he was the one to discover it.{% endif %}")
```
DONE{% endif %}

Aborting:

CALL:
```
abort()
```
DONE
{{ bot_token }}{% if is_initial %}QUERY:{% else %}ANALYSIS:{% endif %}